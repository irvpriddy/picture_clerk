* Implement a change-log for every action performed on a Picture or Repo
  instance. This could be achieved by providing a method decorator that does
  the necessary logging to a history log. Every log entry should consist of the
  method call with arguments (Python executable), a description of the action
  and the method call (with arguments) needed to undo the action.
  
  T.ex. in Repo
  
  @track_history(action='add(...)', descr=('added picture to index'),
  				 undo_action='del(...)')
  def add(self, picture):
  	<...> 

* Possibility to split & merge repositories

* Keep track of deleted pictures, so that clones can be updated

* Use human-readable & portable format for index on disk instead of pickle (e.g. json)

* use virtualenv to work in a isolated python environment (http://iamzed.com/2009/05/07/a-primer-on-virtualenv/, http://www.mahdiyusuf.com/post/5282169518/beginners-guide-easy-install-pip-and-virtualenv)

* package picture_clerk with pip (http://www.pip-installer.org/en/latest/)
or checkout packaging in python3 (see ReadItLater list).

* use dependency injection (e.g. snake-guice): http://www.connorgarvey.com/blog/?p=184

* don't log everything to repo log. log only stuff relevant to repo: pics added/removed/edited, etc

* print sane error messages to CLI if repo is not initialized/unreadable, thumbnails don't exist, etc.

* make Picture, PictureIndex, Config, Repo immutable objects if possible to
  simplify concurrent processing or use defensive copying if object have to 
  be mutable.
